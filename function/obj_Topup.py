import discord
from discord.ui import View, Button, Modal, TextInput, Select
from discord import SelectOption
from datetime import datetime, timedelta
from io import BytesIO
from PIL import Image
import base64
import json
import function.myfunction
import function.myreq

class TopupIDModal(Modal):
    def __init__(self, ENV_DATA, db, log=False):
        super().__init__(title="üìå ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡∏î‡∏µ")  # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å constructor ‡∏Ç‡∏≠‡∏á Modal

        self.db = db  # ‡πÄ‡∏Å‡πá‡∏ö object db ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô instance
        self.log = log

        self.TMP_API_ENDPOINT = ENV_DATA['TMP_API_ENDPOINT']
        self.TMP_API_USERNAME = ENV_DATA['TMP_API_USERNAME']
        self.TMP_API_PASSWORD = ENV_DATA['TMP_API_PASSWORD']
        self.TMP_API_CONID = ENV_DATA['TMP_API_CONID']
        self.TMP_BANK_ACCODE = ENV_DATA['TMP_BANK_ACCODE']
        self.TMP_BANK_ACCOUNT = ENV_DATA['TMP_BANK_ACCOUNT']
        self.TMP_PROMMPAY_NO = ENV_DATA['TMP_PROMMPAY_NO']
        self.TMP_PROMMPAY_TYPE = ENV_DATA['TMP_PROMMPAY_TYPE']
        self.TMP_PROMMPAY_NAME = ENV_DATA['TMP_PROMMPAY_NAME']
        self.TOPUP_MULTIPLY = ENV_DATA['TOPUP_MULTIPLY']

    id_input = TextInput(label="üîπ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", placeholder="‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏Å‡∏°")
        
    async def on_submit(self, interaction: discord.Interaction):
        user_id = self.id_input.value.strip()

        # üî¥ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not user_id:
            embed = discord.Embed(
                title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description="üîπ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        query = "SELECT [UserNum] FROM [Account].[dbo].[cabal_auth_table] WHERE [ID] = ?"
        result = await self.db.fetch_one(query, (user_id,))

        if not result:
            embed = discord.Embed(
                title="‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                description="üîπ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return
        
        # ‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠ user_id ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤
        guild = interaction.guild
        category = interaction.channel.category  

        if not category:
            category = await guild.create_category("Topup")

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
        existing_channel = discord.utils.get(category.channels, name=f"topup-{interaction.user.name}")
        if existing_channel:
            embed = discord.Embed(
                title="‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!",
                description=f"üîπ ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {existing_channel.mention}\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return

        # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
        channel_name = f"topup-{interaction.user.name}"
        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False, send_messages=False),
            interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=False),
            guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True),  # Allow the bot to send messages
        }

        footer = "‚ùó‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!\n"
        footer += "‚õî ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 00:00 - 02:00 ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡∏ß‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÑ‡∏î‡πâ ‡∏Ñ‡∏ß‡∏£‡∏Å‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞"

        topup_channel = await guild.create_text_channel(channel_name, category=category, overwrites=overwrites)
        # üî¥ ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á
        close_button = Button(label="‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á", style=discord.ButtonStyle.red)

        async def close_button_callback(close_interaction):
            if "topup-" in close_interaction.channel.name:
                if self.log:
                    await function.myfunction.save_chat_logs(close_interaction.channel, interaction.user, 'log/topup/')

                await close_interaction.channel.delete()
            else:
                embed = discord.Embed(
                    title="‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ!",
                    description="üîπ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
                    color=discord.Color.red()
                )
                await close_interaction.response.send_message(embed=embed, ephemeral=True)

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ callback
        close_button.callback = close_button_callback

        # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Select ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
        select = Select(
            placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏°",
            options=[
                SelectOption(label="50 ‡∏ö‡∏≤‡∏ó", value="50"),
                SelectOption(label="150 ‡∏ö‡∏≤‡∏ó", value="150"),
                SelectOption(label="300 ‡∏ö‡∏≤‡∏ó", value="300"),
                SelectOption(label="500 ‡∏ö‡∏≤‡∏ó", value="500"),
                SelectOption(label="1000 ‡∏ö‡∏≤‡∏ó", value="1000"),
                SelectOption(label="1500 ‡∏ö‡∏≤‡∏ó", value="1500")
            ]
        )

        async def select_callback(select_interaction: discord.Interaction):
            selected_price = select.values[0]

            # ‡πÉ‡∏ä‡πâ defer ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
            await select_interaction.response.defer()

            # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á
            messages = []
            async for message in topup_channel.history():
                messages.append(message)

            # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏Å
            messages.reverse()
            for message in messages[1:]:
                # print(message)
                await message.delete()
            # ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö API
            getidpay_url = f'{self.TMP_API_ENDPOINT}?username={self.TMP_API_USERNAME}&password={self.TMP_API_PASSWORD}&amount={selected_price}'
            getidpay_url += f'&ref1={user_id}&con_id={self.TMP_API_CONID}&method=create_pay'
            getidpay_data = json.loads(function.myreq.connect_api(getidpay_url).text)

            if getidpay_data['status'] == 1:
                id_pay = getidpay_data['id_pay']
                getqr_url = f'{self.TMP_API_ENDPOINT}?username={self.TMP_API_USERNAME}&password={self.TMP_API_PASSWORD}&con_id={self.TMP_API_CONID}&id_pay={id_pay}'
                getqr_url += f'&type={self.TMP_PROMMPAY_TYPE}&promptpay_id={self.TMP_PROMMPAY_NO}&method=detail_pay'
                getqr_data = json.loads(function.myreq.connect_api(getqr_url).text)

                if getqr_data['status'] == 1:
                    if getqr_data['time_out'] < 0:
                        cancel_url = f'{self.TMP_API_ENDPOINT}?username={self.TMP_API_USERNAME}&password={self.TMP_API_PASSWORD}&con_id={self.TMP_API_CONID}'
                        cancel_url += f'&method=cancel&id_pay={id_pay}'
                        function.myreq.connect_api(cancel_url)
                        
                        # ‡∏™‡πà‡∏á Embed ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
                        embed = discord.Embed(
                            title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                            description=f"üîπ **‡∏Ñ‡∏∏‡∏ì {interaction.user.mention}**\nüëª ‡πÑ‡∏≠‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°: {user_id}\nüí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
                            color=discord.Color.red()
                        )
                        embed.set_footer(text=footer)
                        
                        await select_interaction.edit_original_response(embed=embed)

                        return

                    image_data = base64.b64decode(getqr_data['qr_image_base64'])
                    image_bytes = BytesIO(image_data)

                    amount = "{:.2f}".format(int(getqr_data['amount_check']) / 100)
                    time_out = getqr_data['time_out']

                    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡∏û‡∏£‡πâ‡∏≠‡∏° QR Code
                    CashTopup = int(selected_price) * int(self.TOPUP_MULTIPLY)

                    des = f"üîπ **‡∏Ñ‡∏∏‡∏ì {interaction.user.mention}**\n"
                    des += f"üëª ‡πÑ‡∏≠‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°: {user_id}\n"
                    des += f"üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°: {amount} ‡∏ö‡∏≤‡∏ó\n"
                    des += f"üßà ‡πÅ‡∏Ñ‡∏™‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ: {CashTopup} Cash\n"
                    des += f"üó°Ô∏è ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: {self.TMP_PROMMPAY_NAME}\n"
                    des += f"üèõÔ∏è ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: {self.TMP_PROMMPAY_NO}\n"

                    embed = discord.Embed(
                        title="‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß!",
                        description=des,
                        color=discord.Color.green()
                    )
                    expired = datetime.now() + timedelta(seconds=time_out)

                    formatted_time = expired.strftime("%Y/%m/%d %H:%M:%S")
                    footer_time = f'üìå ‡∏™‡πÅ‡∏Å‡∏ô QR ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô\nüïì ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡∏≠‡∏ô: {formatted_time}\n'

                    embed.set_footer(text= (footer_time + footer) )

                    # ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô Embed ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ discord.File
                    image_file = discord.File(image_bytes, filename="image.png")
                    embed.set_image(url="attachment://image.png")

                    # üî¥ ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á
                    confirm_button = Button(label="‡∏ï‡∏Å‡∏•‡∏á", style=discord.ButtonStyle.primary)

                    async def confirm_button_callback(confirm_interaction):
                        # print("wait api confirm")
                        confirm_url = f'{self.TMP_API_ENDPOINT}?username={self.TMP_API_USERNAME}&password={self.TMP_API_PASSWORD}'
                        confirm_url += f'&con_id={self.TMP_API_CONID}&method=confirm&id_pay={getqr_data["id_pay"]}'
                        confirm_url += f'&accode={self.TMP_BANK_ACCODE}&account_no={self.TMP_BANK_ACCOUNT}&ip=45.154.24.43'
                        confirm_data = json.loads(function.myreq.connect_api(confirm_url).text)

                        # print("wait api check status")
                        if confirm_data['status'] != 1:
                            print("error")
                            embed = discord.Embed(
                                title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                                description=f"‚ùó‚ö†Ô∏è‚Å¥‚Å∞‚Å¥{confirm_data['msg']}",
                                color=discord.Color.red()
                            )
                            embed.set_footer(text=footer)
                            await confirm_interaction.response.send_message(embed=embed, ephemeral=True)  # ‚úÖ ‡πÅ‡∏Å‡πâ interaction ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                            return
                        
                        rw_set = 0

                        match int(selected_price):
                            case 50:
                                rw_set=1
                            case 150:
                                rw_set=2
                            case 300:
                                rw_set=3
                            case 500:
                                rw_set=4
                            case 1000:
                                rw_set=5
                            case 1500:
                                rw_set=6
                            case 2000:
                                rw_set=7
                            case _:
                                rw_set=0

                        # CashTopup
                        # int(self.TOPUP_MULTIPLY)

                        query_topup = """
                        DECLARE @ID varchar(50) = ?
                        ,@rw_set INT = ? -- True ID
                        ,@CashADD INT = ? -- Cash

                        -- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡∏≠‡∏∞‡πÑ‡∏£
                        DECLARE @UserNum int = 0
                                
                        -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á Item_Unit ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
                        DECLARE @sumitem INT
                        SELECT @sumitem = SUM(Item_Unit)
                        FROM CabalLog.dbo.True_Log
                        WHERE True_ID = @rw_set;
                        SELECT @UserNum = UserNum From Account..cabal_auth_table WHERE ID = @ID

                        IF @UserNum != 0
                        BEGIN
                            UPDATE [CabalCash].[dbo].[CashAccount] SET [Cash] = [Cash] + @CashADD WHERE [UserNum] = @UserNum
                        
                            INSERT INTO CabalCash..CashLogNew (ID,CashADD,Reward)
                            VALUES (@ID,@CashADD,0)
                            INSERT INTO CabalCash..CashLogNewPP (ID,CashADD,Reward)
                            VALUES (@ID,@CashADD,0)

                            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô @sumitem ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                            IF @sumitem > 0
                            BEGIN
                                -- ‡∏Å‡∏≤‡∏£‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ó‡∏£‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏£‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
                                DECLARE @Item_ID INT, @Item_Option INT, @Item_Duration INT, @Item_Unit INT;

                                DECLARE data_cursor CURSOR FOR
                                SELECT Item_ID, Item_Option, Item_Duration, Item_Unit
                                FROM CabalLog.dbo.True_Log
                                WHERE True_ID = @rw_set;

                                OPEN data_cursor;
                                FETCH NEXT FROM data_cursor INTO @Item_ID, @Item_Option, @Item_Duration, @Item_Unit;

                                WHILE @@FETCH_STATUS = 0
                                BEGIN
                                    -- ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Item_Unit
                                    DECLARE @i INT = 1;
                                    WHILE @i <= @Item_Unit
                                    BEGIN
                                        -- ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏£‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô up_addmycashitembyitem
                                        EXEC CabalCash.dbo.up_addmycashitembyitem 
                                            @UserNum,  -- ‡πÉ‡∏ä‡πâ @UserNum ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ
                                            1, 
                                            1, 
                                            @Item_ID, 
                                            @Item_Option, 
                                            @Item_Duration, 
                                            'Promotion Topup With Discord';

                                        SET @i = @i + 1;  -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤ @i ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏õ‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                                    END

                                    FETCH NEXT FROM data_cursor INTO @Item_ID, @Item_Option, @Item_Duration, @Item_Unit;
                                END

                                CLOSE data_cursor;
                                DEALLOCATE data_cursor;
                            END
                        END

                        """

                        result_topup = await self.db.execute(query_topup, (user_id,rw_set,CashTopup,))

                        if result_topup != True:
                            if confirm_data['status'] != 1:
                                # print("db error")
                                embed = discord.Embed(
                                    title="‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                                    description=f"‚ùó‚ö†Ô∏è‚Å¥‚Å∞‚Å¥‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
                                    color=discord.Color.red()
                                )
                                embed.set_footer(text=footer)
                                await confirm_interaction.response.send_message(embed=embed, ephemeral=True)  # ‚úÖ ‡πÅ‡∏Å‡πâ interaction ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                                return

                        # print("success")
                        success_des = f"üîπ **‡∏Ñ‡∏∏‡∏ì {interaction.user.mention}**\n"
                        success_des += f"üëª ‡πÑ‡∏≠‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°: {user_id}\n"
                        success_des += f"üí∏ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°: {amount} ‡∏ö‡∏≤‡∏ó\n"
                        success_des += f"üßà ‡πÅ‡∏Ñ‡∏™‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ: {CashTopup} Cash\n"
                        success_des += f"üéÅ ‡πÑ‡∏≠‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô Cash Inventory\n"
                        success_des += f"üåü ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢\n"
                        embed = discord.Embed(
                            title="‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                            description=success_des,
                            color=discord.Color.gold()
                        )
                        embed.set_footer(text=footer)
                        await confirm_interaction.response.send_message(embed=embed, ephemeral=True)  # ‚úÖ ‡πÉ‡∏ä‡πâ interaction ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
                            
                    confirm_button.callback = confirm_button_callback

                    confirm_view = View()
                    confirm_view.add_item(confirm_button)

                    # ‡πÉ‡∏ä‡πâ followup.send() ‡∏™‡πà‡∏á Embed ‡πÅ‡∏•‡∏∞ QR Code
                    await select_interaction.followup.send(embed=embed, file=image_file, view=confirm_view)

        # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ callback ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö Select
        select.callback = select_callback

        # ‡πÉ‡∏™‡πà‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô View
        ticket_view = View()
        ticket_view.add_item(select)
        ticket_view.add_item(close_button)

        # ‚úÖ Embed ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
        embed = discord.Embed(
            title="‚úÖ ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß!",
            description=f"üîπ **‡∏Ñ‡∏∏‡∏ì {interaction.user.mention}**\nüëª ‡πÑ‡∏≠‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°: {user_id}\nüí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°",
            color=discord.Color.green()
        )
        embed.set_footer(text=footer)

        await topup_channel.send(embed=embed, view=ticket_view)

        # ‚úÖ Embed ‡πÅ‡∏à‡πâ‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        embed = discord.Embed(
            title="‚úÖ ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á!",
            description=f"üîπ ‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: {topup_channel.mention}",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed, ephemeral=True)
